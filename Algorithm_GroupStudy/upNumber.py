# 백준 11057번 오르막 수 : https://www.acmicpc.net/problem/11057

n = int(input())

dp = [[0 for _ in range(10)] for _ in range(n + 2)]
dp[1] = [1] * 10
for i in range(2, n + 2):
    dp[i][0] = 1
    for j in range(1,10):
        dp[i][j] = dp[i-1][j] + dp[i][j - 1]
        
print(dp[n+1][-1])

# 알고리즘 : DP(동적계획법)
'''
풀이 : 열에는 숫자, 행은 자릿수로 두고, DP를 수행한다.
행열의 의미는 다음과 같다.
ex) dp[2][7]의 경우 = 숫자 7을 100(10^2)의 자리에 위치했을 때 가능한 오르막수의 개수

숫자 7을 100의 자리에 위치했을 경우, 가능한 수는 다음과 같다.
777 778 779 788 789 799   ->  6가지
위의 6가지 경우는 곧 다음의 두 경우를 합친것과 같다.
  -> 십의 자리 이하만 생각하면 된다.
1. 십의 자리에 7을 배치한 경우  ->  77 78 79
2. 백의 자리에 8을 배치했을 때의 경우  ->  (8)88 (8)89 (8)99
'''
