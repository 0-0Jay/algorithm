# 프로그래머스 - 거스름돈 : https://school.programmers.co.kr/learn/courses/30/lessons/12907

def solution(n, money):
    dp = [0] * (n + 1)
    dp[0] = 1
    for mon in money:
        for i in range(mon, n + 1):
            dp[i] += dp[i - mon]
    return dp[n] % 1000000007

# 알고리즘 : DP
'''
풀이 : 동전을 하나 골라서, 기존 금액에 해당 동전을 추가하는 경우를 누적한다.
예를 들어, 입력예제1에서 2원 동전을 쓴다고 가정한다.
2원 동전으로 만들 수 있는 금액은 최소 2원이기 때문에 2원부터 탐색한다.
2원은 0원을 만드는 경우에 2원 동전을 하나 추가하는 것과 같다.
3원은 1원을 만드는 경우에 2원 동전을 하나 추가하는 것과 같다.
  :
즉, n원은 n-2원을 만드는 경우에 2원 동전을 하나 추가하는 것과 같다.
동전을 하나 선택해서(mon) 해당 동전의 금액부터 n원까지 mon원을 뺀 경우의 수를 가져와 누적한다.
'''
