# 프로그래머스 - 2 x n 타일링 : https://school.programmers.co.kr/learn/courses/30/lessons/12900

def solution(n):
    dp = [0] * (n + 1)
    dp[0], dp[1] = 1, 1
    for i in range(2, n + 1):
        dp[i] = (dp[i - 2] + dp[i - 1]) % 1000000007
    return dp[-1]

# 알고리즘 : DP
'''
풀이 : dp를 활용해 n - 1개일 때의 경우의 수와 n - 2개일 때의 경우의 수를 누적해 n개의 경우의 수를 구한다.
블럭의 개수가 n개일 때 가능한 경우의 수는 다음과 같다.
1. n - 1개인 경우의 수에 블럭 1개를 세로로 세워 옆에 붙이는 경우의 수
2. n - 2개인 경우의 수에 블럭 2개를 가로로 쌓아 옆에 붙이는 경우의 수
1번과 2번의 경우의 합이 곧 n개일 때 가능한 경우의 수다.
'''
